{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Avenir-Book;
\f3\froman\fcharset0 Times-Roman;\f4\fnil\fcharset0 Avenir-Heavy;\f5\fmodern\fcharset0 CourierNewPSMT;
\f6\fnil\fcharset0 Avenir-BookOblique;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww11520\viewh17300\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa293\partightenfactor0
\ls1\ilvl0
\f0\b\fs36 \cf0 Pretests - Chapter 4
\f1\b0\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf0 Abigail Pryor, MTEC-340-001\

\fs28 \ul \
\pard\pardeftab720\partightenfactor0

\f2\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\ulc0 \outl0\strokewidth0 \strokec2 Chapter 4 \'96 Control Flow and Collection Types\
\
\pard\pardeftab720\partightenfactor0

\f3\fs24 \cf0 \ulnone \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f2\fs29\fsmilli14667 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 1. 	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In your own words, what is a condition? What is a passing and what is a failing condition?\
\pard\tx720\pardeftab720\partightenfactor0

\f4\b \cf0 	A condition is something that must be true in order for something to happen. 		It evaluates to either be true or false, and ultimately handles the decision 		making for the program. A passing condition is evaluated to be true, and a 		failing condition is evaluated to be false.
\f2\b0 \
\
2.	What is a decision tree?\

\f4\b 	A decision tree is a complex logic routing system that flows through your 		code - usually comprised of many nested if-else statements.
\f2\b0 \
\
3.	In control flow, what does nested refer to?\

\f4\b 	Nested refers to pieces of code that are placed within each other, creating 		a chain of events one after another, similar to a Russian Nesting Doll.
\f2\b0 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 4.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is pattern matching? What is a match expression and what data type must they be?\
\ls3\ilvl0
\f4\b 		Pattern matching is found within switch statements, and refers to how a match expression is validated against multiple case statements. All case statement values have to be the same data type as the type of match expression (which can be any type that isn\'92t null).
\f2\b0 \
		\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 5.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 When will the default case of a switch statement be fired?\
\ls3\ilvl0
\f4\b 		The default case statement with a value that matches the expression is the one that is executed. If no case is matched, then the default case fires.
\f2\b0 \
\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 6.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the 
\f5 break 
\f2 keyword for? What happens if you don\'92t include within a 
\f5 switch 
\f2 statement\'92s 
\f5 case
\f2 ? Why would you omit the 
\f5 break
\f2  keyword?\
\ls3\ilvl0
\f4\b 		The break keyword acts like a code block inside an if-else statement that tells the program to exit a switch statement completely after the selected case fires. You would omit this when you want the case to \'93fall through\'94 to the next case, allowing the code to be reused.
\f2\b0 \
\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 7.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What are the three types of collections in C#, and how are they different?\
\ls3\ilvl0
\f4\b 		There are non-generic, concurrent, and generic types of collections in C#. With generic, you have elements of the same data type. Concurrent collections can access a collection of objects from several different threads. Non-generic collections accept all different data types.\
	
\f2\b0 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 8.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between a 
\f5 for 
\f2 loop and a 
\f5 foreach 
\f2 loop?\
\ls3\ilvl0
\f4\b 		A for loop is used when a block of code needs to be executed a certain amount of times before the program can continue running its course. While foreach loops takes each element in a collection and stores each one inside a local variable, making it accessible inside the statement. For this type to work properly, the local variable type needs to match the collection element type.
\f2\b0 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
9.	\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the difference between a 
\f5 while 
\f2 loop and a 
\f5 do-while 
\f2 loop? (Hint: look at the 
\f6\i Control Flow
\f2\i0  section of the class\'92s repo.) \
\ls3\ilvl0
\f4\b 		A while-loop is similar to the if statement, where a part of the code runs as long as a condition or expression is true. The condition is checked prior to running any code with while-loops. It will not execute the condition if it is not met. However, in do-while loops, statements are executed first and run at least once - whether the condition is met or not.\
}